local RunService = game:GetService("RunService")
local Players = game:GetService("Players")

local function zeroOutYVelocity(hrp)
    hrp.Velocity = Vector3.new(hrp.Velocity.X, 0, hrp.Velocity.Z)
    hrp.AssemblyLinearVelocity = Vector3.new(hrp.Velocity.X, 0, hrp.Velocity.Z)
end

local function onPlayerAdded(player)
    player.CharacterAdded:Connect(function(character)
        local hrp = character:WaitForChild("HumanoidRootPart")
        zeroOutYVelocity(hrp)
    end)
end

local function onPlayerRemoving(player)
    player.CharacterAdded:Disconnect()
end

game.Players.PlayerAdded:Connect(onPlayerAdded)
game.Players.PlayerRemoving:Connect(onPlayerRemoving)

RunService.Heartbeat:Connect(function()
    pcall(function()
        for i, player in pairs(game.Players:GetChildren()) do
            if player.Name ~= game.Players.LocalPlayer.Name then
                local hrp = player.Character.HumanoidRootPart
                zeroOutYVelocity(hrp)
            end
        end
    end)
end)

getgenv().CrazyAnti = true 
getgenv().AntiStrength = -9999 

game:GetService("RunService").Heartbeat:Connect(function()
    if getgenv().CrazyAnti ~= false then 
        local vel = game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity
        game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(4542,getgenv().AntiStrength,3242) 
        game:GetService("RunService").RenderStepped:Wait()
        game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity = vel
    end 
end)

getgenv().VelocityChanger = true
getgenv().Velocity = Vector3.new(0,-500,0)

local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character
local RootPart = Character:FindFirstChild("HumanoidRootPart")

local Heartbeat, RStepped = RunService.Heartbeat, RunService.RenderStepped

LocalPlayer.CharacterAdded:Connect(function(NewCharacter)
    Character = NewCharacter
end)

local RVelocity, YVelocity = nil, 0.1

while true do
    if VelocityChanger then
        if (not RootPart) or (not RootPart.Parent) or (not RootPart.Parent.Parent) then
            warn("weird ahh died")
            RootPart = Character:FindFirstChild("HumanoidRootPart")
        else
            RVelocity = RootPart.Velocity
    
            RootPart.Velocity = type(Velocity) == "vector" and Velocity or Velocity(RVelocity)
        
            RStepped:wait()
        
            RootPart.Velocity = RVelocity
        end
    end
    
    Heartbeat:wait()
end

